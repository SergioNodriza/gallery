App\Entity\Group:

  attributes:
    normalization_context:
      groups: [group_read]

  collectionOperations:

    create:
      method: POST
      path: /groups/create
      controller: App\Api\Action\Group\Create
      denormalization_context:
        groups: [ group_create ]
      security_post_denormalize: is_granted("GROUP_CREATE", object)
      security_post_denormalize_message: 'Wrong Permissions, You can not create a Group'
      openapi_context:
        summary: Create a new Group

  itemOperations:
    get:
      method: GET
      security: is_granted("GROUP_READ", object)
      security_message: 'Wrong Permissions, You can not get this Group'

    put:
      method: PUT
      security: is_granted("GROUP_UPDATE", object)
      security_message: 'Wrong Permissions, You can not update this Group'
      denormalization_context:
        groups: [ group_update ]

    delete:
      method: DELETE
      security: is_granted("GROUP_DELETE", object)
      security_message: 'Wrong Permissions, You can not delete this Group'

    photo:
      method: POST
      path: /groups/{id}/photo
      controller: App\Api\Action\Group\Photo
      security_post_denormalize: is_granted("GROUP_ADD_PHOTO", object)
      security_post_denormalize_message: 'Wrong Permissions, You can not add a Photo'
      openapi_context:
        summary: Add/Remove a Photo to a Group
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  photo:
                    type: string
              example:
                photo: Photo IRI
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                examples:
                  Added:
                    value:
                      result: Added
                  Removed:
                    value:
                      result: Removed

  properties:
    photos:
      subresource:
        resourceClass: App\Entity\Photo
        collection: true
        maxDepth: 1
    owner:
      subresource:
        resourceClass: App\Entity\User
        collection: true
        maxDepth: 1