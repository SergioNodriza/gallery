App\Entity\Photo:

  attributes:
    normalization_context:
      groups: [photo_read]
    filters:
      - app.custom.boolean_filter.photos

  collectionOperations:

    get: ~

    upload:
      method: POST
      path: /photos/upload
      controller: App\Api\Action\Photo\Upload
#      security_post_denormalize: is_granted("PHOTO_UPLOAD", object)
#      security_post_denormalize_message: 'Wrong Permissions, You can not upload a Photo'
      deserialize: false
      openapi_context:
        summary: Upload a new Photo
        requestBody:
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  archive:
                    type: string
                    format: binary
                  description:
                    type: string
                  private:
                    type: boolean
                  owner:
                    type: string

  itemOperations:
    get: ~

    put:
      method: PUT
      security: is_granted("PHOTO_UPDATE", object)
      security_message: 'Wrong Permissions, You can not update this Photo'
      denormalization_context:
        groups: [ photo_update ]

    delete:
      method: DELETE
      security: is_granted("PHOTO_DELETE", object)
      security_message: 'Wrong Permissions, You can not delete this Photo'

    interact:
      method: POST
      path: /photos/{id}/interact
      controller: App\Api\Action\Photo\Interact
      deserialize: false
      security: is_granted("PHOTO_INTERACT")
      security_message: 'Wrong Permissions, You can not interact with this Photo'
      openapi_context:
        summary: Like/Dislike a Photo
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
              example:
                  user: User IRI
        responses:
          200:
            description: Result
            content:
              application/json:
                schema:
                  type: object
                example:
                  newLikes: 23
  properties:
    owner:
      subresource:
        resourceClass: App\Entity\User
        collection: true
        maxDepth: 1